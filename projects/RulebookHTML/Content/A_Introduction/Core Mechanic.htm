<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>The Core Mechanic</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/styles.css" rel="stylesheet" />
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <h1><a name="kanchor1"></a>The Core Mechanic</h1>
            <p>The core mechanic refers to the central method by which anything is resolved within the game. The Core Mechanic of The Arcane Engine is a d20 based rolling system. You simply roll a d20 and add all relevant modifiers, ranging from skill to possible scenario bonuses against a target number. This target number represents how difficult the task being done is. This system differs from the traditional d20 system however in one way: thresholds. The dichotomy of a binary pass/fail system endemic to standard d20 systems where you simply attempt to beat a target number is a little too intense, and none too satisfying. Instead, this game utilizes thresholds for all things, and GM’s are encouraged to come up with ways that players can partially fail or partially succeed at tasks without outright saying the player failed. The closer you come to the target number, within specific ranges, dictates how well the task was completed. Generally falling below the number means you completed the task unsatisfactorily, such as dealing less than optimal damage in an attack, or making it only most of the distance across a pit, meaning you narrowly grabbed the opposite ledge. Likewise, falling above the number allows you greater modes of success. From dealing bonus damage in an attack, to perhaps jumping so swiftly you avoided the gaseous burst coming from inside the pit that you didn’t know about.</p><br>
            <h2>Tasks</h2><br>
            <p>Tasks are a simple way to just name something that must be done. But why are they in the game? In real life, when someone goes to do something, and it doesn’t matter what, they are not operating in a vacuum. There are innumerable, incalculable factors that go into a task going smoothly or very wrong. Simply picking up a heavy box can go wrong by a slight shift of weight, or a jump can go wrong if there happens to be a small rock to slip on, taking away most of the pushing power. This randomness in real life is represented by dice in the game world, seeing as how it would be completely ridiculous and unreasonable to think that the GM could simulate all that, they have a hard enough job. At its heart, tasks are there for characters to have something to do, and a way for there to be some intrigue and randomness in the game world. If everything happened according to narrative agreement, then the game would not be a game, it would be a book. There are multiple types of tasks, and each entails a different variation of rolling.</p><br>
            <p>The following is the list of task types, the way they are executed, and when they are used.</p><br>
            <p>
                Standard: When the opposition of the check is unchanging or static, and
                the scope of the task can be finished in a single continuous
                action. The player rolls a single die, adds any possible attributes,
                skills, and other modifiers, and compares it to a set number as
                determined by the GM. If the roll total is equal to or greater than
                the set number, the action is successful.</p>
            <p> Opposed: Similar to a standard task, but the opposition is actively
                attempting to impede the progress of the player. Like a standard test, but instead of a set number determined
                by the GM, the opposing force makes their own roll in the same
                way. Whoever has the higher total wins and has their intended
                effect happen.</p>
                <p>    Linked: When the task is complex, and requires multiple skills or
                when multiple, separate, sequential tasks combine to have an
                emergent effect. A series of multiple standard tests, where each success unlocks
                the ability to make the next roll in the chain.</p>
                <p>    Joined: Similar to a linked test, but multiple actors are completing the
                separate tasks at the same time. A number of standard tests, where each success makes all
                other tests easier, and any failures make all other tests harder
                as determined by the GM.</p><br>
                <h2>Success and Failure</h2><br>
                <p>This section describes the meanings and concepts of success and failure. There is no success and failure within the strictest sense. There are degrees of success and degrees of failure, but an abject failure is very rare, as even in complete disaster, something is often taken away. For GM’s, opposed rolls often do not halt the game by their nature, but for standard rolls against a simple target, it is important that there not be a binary outcome to the roll. Rolls should have a target, but the character falling below the target does not mean that they simply fail. Provided is a list with common rolls in comparison to the target, and the outcome of those rolls.</p>
                <p>10+ Below Target: The intended task is a complete failure, and extra negative effects are assured.</p>
                <p>5-9 Below Target: The intended task is barely completed but in a very unsatisfactory manner.</p>
                <p>1-4 Below Target: The intended task is completed adequately, but negative side effects are likely.</p>
                <p>Equal to Target: The intended task is completed exactly as intended.</p>
                <p>1-4 Above Target: There are possible positive side effects in addition to the task completion.</p>
                <p>5-9 Above Target: The intended task is completed with incredible quality and speed.</p>
                <p>10+ Above Target: The intended task is completed exceptionally, better than intended, and with positive side effects.</p>
                </div>
        <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
    </body>
</html>